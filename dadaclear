[33mcommit a9f27221b8a7cd2f2c0f0fa739316e1d61fe74cb[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m, [m[1;33mtag: [m[1;33mv1.0[m[33m)[m
Author: seansaints <seanstaana0510@gmail.com>
Date:   Sat May 24 11:18:06 2025 +0800

    Joke web project codes

[1mdiff --git a/index.html b/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..bac1b06[m
[1m--- /dev/null[m
[1m+++ b/index.html[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m<html lang="en">[m
[32m+[m[32m  <head>[m
[32m+[m[32m    <meta charset="UTF-8" />[m
[32m+[m[32m    <meta name="viewport" content="width=device-width, initial-scale=1.0" />[m
[32m+[m[32m    <title>Joke Web</title>[m
[32m+[m[32m    <link rel="stylesheet" href="style.css" />[m
[32m+[m[32m  </head>[m
[32m+[m[32m  <body>[m
[32m+[m[32m    <h1>Joke Generator</h1>[m
[32m+[m[32m    <button id="jokeBtn">I have a joke click me</button>[m
[32m+[m
[32m+[m[32m    <div id="jokeDisplay">[m
[32m+[m[32m      <!-- joke will display here -->[m
[32m+[m[32m    </div>[m
[32m+[m
[32m+[m[32m    <script src="script.js"></script>[m
[32m+[m[32m  </body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/script.js b/script.js[m
[1mnew file mode 100644[m
[1mindex 0000000..af8889b[m
[1m--- /dev/null[m
[1m+++ b/script.js[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32m// Wait until the entire HTML document has loaded before running the script[m
[32m+[m[32mwindow.addEventListener("DOMContentLoaded", () => {[m
[32m+[m
[32m+[m[32m  // Get the elements from the HTML: the button and the joke display area[m
[32m+[m[32m  const jokeDisplay = document.getElementById("jokeDisplay");[m
[32m+[m[32m  const jokeBtn = document.getElementById("jokeBtn");[m
[32m+[m
[32m+[m[32m  // function[m
[32m+[m[32m  function getJoke() {[m
[32m+[m[32m    // show message while fetching data[m
[32m+[m[32m    jokeDisplay.innerText = "Loading a funny joke... ðŸ˜‚";[m
[32m+[m
[32m+[m[32m    // Use the fetch API to get a random joke from the joke API[m
[32m+[m[32m    fetch("https://official-joke-api.appspot.com/jokes/random")[m
[32m+[m[32m      .then((response) => response.json()) // convert the raw response into a usable JSON[m
[32m+[m[32m      .then((jokeData) => {[m
[32m+[m[32m        // Create a paragraph element to hold the "setup" part of the joke[m
[32m+[m[32m        const setupEl = document.createElement("p");[m
[32m+[m[32m        setupEl.innerHTML = `<strong>Setup:</strong> ${jokeData.setup}`;[m
[32m+[m
[32m+[m[32m        // Create a paragraph element for the "punchline" (but hide it at first)[m
[32m+[m[32m        const punchlineEl = document.createElement("p");[m
[32m+[m[32m        punchlineEl.innerHTML = `<strong>Punchline:</strong> ${jokeData.punchline}`;[m
[32m+[m[32m        punchlineEl.style.display = "none"; // hide until user clicks answer[m
[32m+[m
[32m+[m[32m        // Create a button the user can click to reveal the punchline[m
[32m+[m[32m        const revealBtn = document.createElement("button");[m
[32m+[m[32m        revealBtn.textContent = "Answer.. ðŸ˜†";[m
[32m+[m[32m        revealBtn.classList.add("revealBtn");[m
[32m+[m
[32m+[m[32m        // When the user clicks this button...[m
[32m+[m[32m        revealBtn.addEventListener("click", () => {[m
[32m+[m[32m          punchlineEl.style.display = "block"; // show the punchline[m
[32m+[m[32m          revealBtn.style.display = "none"; // hide the answer button[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        // Clear out any old joke before showing the new one[m
[32m+[m[32m        jokeDisplay.innerHTML = "";[m
[32m+[m
[32m+[m[32m        // Add the new setup, reveal button, and hidden punchline to the page[m
[32m+[m[32m        jokeDisplay.appendChild(setupEl); // show setup[m
[32m+[m[32m        jokeDisplay.appendChild(revealBtn); // show "Show Punchline" button[m
[32m+[m[32m        jokeDisplay.appendChild(punchlineEl); // hidden punchline (until clicked)[m
[32m+[m[32m      })[m
[32m+[m[32m      .catch((error) => {[m
[32m+[m[32m        // If there's a problem getting the joke (like no internet), show a message[m
[32m+[m[32m        jokeDisplay.innerText = "Sorry, I can't joke right now...";[m
[32m+[m[32m        console.error("Error fetching joke:", error); // log the error in the browser console[m
[32m+[m[32m      });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // When the main "Get Joke" button is clicked, call the getJoke function[m
[32m+[m[32m  jokeBtn.addEventListener("click", getJoke);[m
[32m+[m[32m});[m
[1mdiff --git a/style.css b/style.css[m
[1mnew file mode 100644[m
[1mindex 0000000..ac28a7f[m
[1m--- /dev/null[m
[1m+++ b/style.css[m
[36m@@ -0,0 +1,72 @@[m
[32m+[m
[32m+[m[32m@import url("https://fonts.googleapis.com/css2?family=Comic+Neue&display=swap");[m
[32m+[m
[32m+[m[32m* {[m
[32m+[m[32m  box-sizing: border-box;[m
[32m+[m[32m  margin: 0;[m
[32m+[m[32m  padding: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mbody {[m
[32m+[m[32m  font-family: "Comic Neue", cursive;[m
[32m+[m[32m  background: linear-gradient(to right, #fbc2eb, #a6c1ee);[m
[32m+[m[32m  min-height: 100vh;[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  flex-direction: column;[m
[32m+[m[32m  align-items: center;[m
[32m+[m[32m  justify-content: center;[m
[32m+[m[32m  padding: 2rem;[m
[32m+[m[32m  color: #333;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mh1 {[m
[32m+[m[32m  font-size: 2.5rem;[m
[32m+[m[32m  margin-bottom: 1.5rem;[m
[32m+[m[32m  color: #222;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m#jokeBtn {[m
[32m+[m[32m  padding: 0.8rem 1.5rem;[m
[32m+[m[32m  font-size: 1.2rem;[m
[32m+[m[32m  background-color: #ff6b81;[m
[32m+[m[32m  color: white;[m
[32m+[m[32m  border: none;[m
[32m+[m[32m  border-radius: 12px;[m
[32m+[m[32m  cursor: pointer;[m
[32m+[m[32m  transition: background-color 0.3s ease;[m
[32m+[m[32m  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#jokeBtn:hover {[m
[32m+[m[32m  background-color: #ff4757;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m#jokeDisplay {[m
[32m+[m[32m  margin-top: 2rem;[m
[32m+[m[32m  max-width: 600px;[m
[32m+[m[32m  background-color: white;[m
[32m+[m[32m  padding: 1.5rem;[m
[32m+[m[32m  border-radius: 12px;[m
[32m+[m[32m  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);[m
[32m+[m[32m  font-size: 1.2rem;[m
[32m+[m[32m  text-align: center;[m
[32m+[m[32m  line-height: 1.6;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.revealBtn {[m
[32m+[m[32m  margin-top: 1rem;[m
[32m+[m[32m  padding: 0.5rem 1.2rem;[m
[32m+[m[32m  font-size: 1rem;[m
[32m+[m[32m  background-color: #1dd1a1;[m
[32m+[m[32m  color: white;[m
[32m+[m[32m  border: none;[m
[32m+[m[32m  border-radius: 8px;[m
[32m+[m[32m  cursor: pointer;[m
[32m+[m[32m  transition: background-color 0.3s ease;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.revealBtn:hover {[m
[32m+[m[32m  background-color: #10ac84;[m
[32m+[m[32m}[m
